// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  isAdmin  Boolean @default(true)
}

model Post {
  id        Int         @id @default(autoincrement())
  title     String
  date      DateTime
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  content   String?     @db.LongText
  published Boolean     @default(false)
  viewCount Int         @default(0)
  mainImage PostImage?  @relation("postImage")
  images    PostImage[] @relation("postAlbumImages")
}

model PostImage {
  id          Int    @id @default(autoincrement())
  filename    String @unique
  width       Int
  height      Int
  postImg     Post?  @relation("postImage", fields: [postImgId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  postImgId   Int?   @unique
  postAlbum   Post?  @relation("postAlbumImages", fields: [postAlbumId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  postAlbumId Int?
}

model Content {
  id       Int     @id @default(autoincrement())
  label    String  @unique
  text     String  @db.LongText
}

model Painting {
  id          Int      @id @default(autoincrement())
  title       String
  date        DateTime
  technique   String   @db.LongText
  description String?  @db.LongText
  height      Int
  width       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  image       Image    @relation("PaintingImage", fields: [imageId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  imageId     Int      @unique
  isToSell    Boolean
  price       Int?
}

model Sculpture {
  id          Int      @id @default(autoincrement())
  title       String
  date        DateTime
  technique   String   @db.LongText
  description String?  @db.LongText
  height      Int
  width       Int
  length      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  images      Image[]  @relation("SculptureImages")
  isToSell    Boolean
  price       Int?
}

model Image {
  id              Int        @id @default(autoincrement())
  filename        String     @unique
  width           Int
  height          Int
  paintingImg     Painting?  @relation("PaintingImage")
  paintingId      Int?       @unique
  sculptureImages Sculpture? @relation("SculptureImages", fields: [sculptureId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sculptureId     Int?
}
